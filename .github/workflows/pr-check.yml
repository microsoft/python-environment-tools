name: PR/CI Check

on:
  pull_request:
  push:
    branches-ignore:
      - main
      - release*
      - release/*
      - release-*

jobs:
  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          #   - os: ubuntu-latest
          #     target: aarch64-unknown-linux-gnu
          #   - os: ubuntu-latest
          #     target: arm-unknown-linux-gnueabihf
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-14
            target: aarch64-apple-darwin
          #   - os: ubuntu-latest
          #     target: x86_64-unknown-linux-gnu
          #   - os: ubuntu-latest
          #     target: aarch64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust Tool Chain setup
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Cargo Fetch
        run: cargo fetch

      - name: Add Conda to PATH
        run: |
          if [-eq "${{ matrix.os }}" "windows-latest"]; then
            echo "PATH=$PATH;$CONDA" >> "$GITHUB_ENV"
          else
            echo "PATH=$PATH:$CONDA" >> "$GITHUB_ENV"
          fi

      - name: Install pyenv
        if: startsWith( matrix.os, 'windows')
        run: |
          choco install pyenv-win -y
          pyenv install 3.12.3 3.11.9 3.10.14 3.9.19 3.8.19
          

      - name: Install pyenv
        if: startsWith( matrix.os, 'ubuntu') || startsWith( matrix.os, 'macos')
        run: |
          curl https://pyenv.run | bash
          echo PYENV_ROOT="$HOME/.pyenv" >> $GITHUB_ENV
          echo PATH="$HOME/.pyenv/bin:$PATH" >> $GITHUB_ENV
          ~/.pyenv/bin/pyenv install 3.12.3 3.11.9 3.10.14 3.9.19 3.8.19

      - name: Run Tests
        run: cargo test --frozen --all-features

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pet-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/pet*
